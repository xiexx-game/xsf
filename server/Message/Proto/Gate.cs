// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Gate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace XsfPb {

  /// <summary>Holder for reflection information generated from Gate.proto</summary>
  public static partial class GateReflection {

    #region Descriptor
    /// <summary>File descriptor for Gate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpHYXRlLnByb3RvEgZ4c2ZfcGIiJQoQR3RfR3RBX0hhbmRzaGFrZRIRCglz",
            "ZXJ2ZXJfaWQYASABKA0iJQoQR3RBX0d0X0hhbmRzaGFrZRIRCglzZXJ2ZXJf",
            "aWQYASABKA0iEgoQR3RfR3RBX0hlYXJ0YmVhdCInChJHdF9HdEFfQ2xpZW50",
            "Q2xvc2USEQoJY2xpZW50X2lkGAEgASgNIjwKF0d0QV9HdF9DbGllbnREaXNj",
            "b25uZWN0EhEKCWNsaWVudF9pZBgBIAEoDRIOCgZyZWFzb24YAiABKA0iQQoU",
            "R3RBX0d0X0NsaWVudE1lc3NhZ2USEQoJY2xpZW50X2lkGAEgAygNEhYKDmNs",
            "aWVudF9tZXNzYWdlGAIgASgMIioKEEd0QV9HdF9Ccm9hZGNhc3QSFgoOY2xp",
            "ZW50X21lc3NhZ2UYASABKAwiRgoSR3RBX0d0X1NldFNlcnZlcklkEhEKCWNs",
            "aWVudF9pZBgBIAEoDRIKCgJlcBgCIAEoDRIRCglzZXJ2ZXJfaWQYAyABKA1i",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::XsfPb.Gt_GtA_Handshake), global::XsfPb.Gt_GtA_Handshake.Parser, new[]{ "ServerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XsfPb.GtA_Gt_Handshake), global::XsfPb.GtA_Gt_Handshake.Parser, new[]{ "ServerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XsfPb.Gt_GtA_Heartbeat), global::XsfPb.Gt_GtA_Heartbeat.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XsfPb.Gt_GtA_ClientClose), global::XsfPb.Gt_GtA_ClientClose.Parser, new[]{ "ClientId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XsfPb.GtA_Gt_ClientDisconnect), global::XsfPb.GtA_Gt_ClientDisconnect.Parser, new[]{ "ClientId", "Reason" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XsfPb.GtA_Gt_ClientMessage), global::XsfPb.GtA_Gt_ClientMessage.Parser, new[]{ "ClientId", "ClientMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XsfPb.GtA_Gt_Broadcast), global::XsfPb.GtA_Gt_Broadcast.Parser, new[]{ "ClientMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::XsfPb.GtA_Gt_SetServerId), global::XsfPb.GtA_Gt_SetServerId.Parser, new[]{ "ClientId", "Ep", "ServerId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// gate --> gate acceptor 握手
  /// </summary>
  public sealed partial class Gt_GtA_Handshake : pb::IMessage<Gt_GtA_Handshake> {
    private static readonly pb::MessageParser<Gt_GtA_Handshake> _parser = new pb::MessageParser<Gt_GtA_Handshake>(() => new Gt_GtA_Handshake());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Gt_GtA_Handshake> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XsfPb.GateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gt_GtA_Handshake() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gt_GtA_Handshake(Gt_GtA_Handshake other) : this() {
      serverId_ = other.serverId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gt_GtA_Handshake Clone() {
      return new Gt_GtA_Handshake(this);
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 1;
    private uint serverId_;
    /// <summary>
    /// 服务器id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Gt_GtA_Handshake);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Gt_GtA_Handshake other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerId != other.ServerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerId != 0) hash ^= ServerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ServerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Gt_GtA_Handshake other) {
      if (other == null) {
        return;
      }
      if (other.ServerId != 0) {
        ServerId = other.ServerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServerId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// gate acceptor --> gate  握手反馈
  /// </summary>
  public sealed partial class GtA_Gt_Handshake : pb::IMessage<GtA_Gt_Handshake> {
    private static readonly pb::MessageParser<GtA_Gt_Handshake> _parser = new pb::MessageParser<GtA_Gt_Handshake>(() => new GtA_Gt_Handshake());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GtA_Gt_Handshake> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XsfPb.GateReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_Handshake() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_Handshake(GtA_Gt_Handshake other) : this() {
      serverId_ = other.serverId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_Handshake Clone() {
      return new GtA_Gt_Handshake(this);
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 1;
    private uint serverId_;
    /// <summary>
    /// 服务器id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GtA_Gt_Handshake);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GtA_Gt_Handshake other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerId != other.ServerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerId != 0) hash ^= ServerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServerId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ServerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GtA_Gt_Handshake other) {
      if (other == null) {
        return;
      }
      if (other.ServerId != 0) {
        ServerId = other.ServerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ServerId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// gate --> gate acceptor 心跳
  /// </summary>
  public sealed partial class Gt_GtA_Heartbeat : pb::IMessage<Gt_GtA_Heartbeat> {
    private static readonly pb::MessageParser<Gt_GtA_Heartbeat> _parser = new pb::MessageParser<Gt_GtA_Heartbeat>(() => new Gt_GtA_Heartbeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Gt_GtA_Heartbeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XsfPb.GateReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gt_GtA_Heartbeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gt_GtA_Heartbeat(Gt_GtA_Heartbeat other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gt_GtA_Heartbeat Clone() {
      return new Gt_GtA_Heartbeat(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Gt_GtA_Heartbeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Gt_GtA_Heartbeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Gt_GtA_Heartbeat other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// gate --> gate acceptor 客户端连接关闭
  /// </summary>
  public sealed partial class Gt_GtA_ClientClose : pb::IMessage<Gt_GtA_ClientClose> {
    private static readonly pb::MessageParser<Gt_GtA_ClientClose> _parser = new pb::MessageParser<Gt_GtA_ClientClose>(() => new Gt_GtA_ClientClose());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Gt_GtA_ClientClose> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XsfPb.GateReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gt_GtA_ClientClose() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gt_GtA_ClientClose(Gt_GtA_ClientClose other) : this() {
      clientId_ = other.clientId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Gt_GtA_ClientClose Clone() {
      return new Gt_GtA_ClientClose(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private uint clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Gt_GtA_ClientClose);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Gt_GtA_ClientClose other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Gt_GtA_ClientClose other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// gate acceptor --> gate 主动关闭客户端连接
  /// </summary>
  public sealed partial class GtA_Gt_ClientDisconnect : pb::IMessage<GtA_Gt_ClientDisconnect> {
    private static readonly pb::MessageParser<GtA_Gt_ClientDisconnect> _parser = new pb::MessageParser<GtA_Gt_ClientDisconnect>(() => new GtA_Gt_ClientDisconnect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GtA_Gt_ClientDisconnect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XsfPb.GateReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_ClientDisconnect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_ClientDisconnect(GtA_Gt_ClientDisconnect other) : this() {
      clientId_ = other.clientId_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_ClientDisconnect Clone() {
      return new GtA_Gt_ClientDisconnect(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private uint clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private uint reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GtA_Gt_ClientDisconnect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GtA_Gt_ClientDisconnect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (Reason != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ClientId);
      }
      if (Reason != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientId);
      }
      if (Reason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GtA_Gt_ClientDisconnect other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      if (other.Reason != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadUInt32();
            break;
          }
          case 16: {
            Reason = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// gate acceptor --> gate 发往客户端消息
  /// </summary>
  public sealed partial class GtA_Gt_ClientMessage : pb::IMessage<GtA_Gt_ClientMessage> {
    private static readonly pb::MessageParser<GtA_Gt_ClientMessage> _parser = new pb::MessageParser<GtA_Gt_ClientMessage>(() => new GtA_Gt_ClientMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GtA_Gt_ClientMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XsfPb.GateReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_ClientMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_ClientMessage(GtA_Gt_ClientMessage other) : this() {
      clientId_ = other.clientId_.Clone();
      clientMessage_ = other.clientMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_ClientMessage Clone() {
      return new GtA_Gt_ClientMessage(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_clientId_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> clientId_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ClientId {
      get { return clientId_; }
    }

    /// <summary>Field number for the "client_message" field.</summary>
    public const int ClientMessageFieldNumber = 2;
    private pb::ByteString clientMessage_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ClientMessage {
      get { return clientMessage_; }
      set {
        clientMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GtA_Gt_ClientMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GtA_Gt_ClientMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clientId_.Equals(other.clientId_)) return false;
      if (ClientMessage != other.ClientMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clientId_.GetHashCode();
      if (ClientMessage.Length != 0) hash ^= ClientMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      clientId_.WriteTo(output, _repeated_clientId_codec);
      if (ClientMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ClientMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += clientId_.CalculateSize(_repeated_clientId_codec);
      if (ClientMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GtA_Gt_ClientMessage other) {
      if (other == null) {
        return;
      }
      clientId_.Add(other.clientId_);
      if (other.ClientMessage.Length != 0) {
        ClientMessage = other.ClientMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            clientId_.AddEntriesFrom(input, _repeated_clientId_codec);
            break;
          }
          case 18: {
            ClientMessage = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// gate acceptor --> gate 消息广播
  /// </summary>
  public sealed partial class GtA_Gt_Broadcast : pb::IMessage<GtA_Gt_Broadcast> {
    private static readonly pb::MessageParser<GtA_Gt_Broadcast> _parser = new pb::MessageParser<GtA_Gt_Broadcast>(() => new GtA_Gt_Broadcast());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GtA_Gt_Broadcast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XsfPb.GateReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_Broadcast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_Broadcast(GtA_Gt_Broadcast other) : this() {
      clientMessage_ = other.clientMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_Broadcast Clone() {
      return new GtA_Gt_Broadcast(this);
    }

    /// <summary>Field number for the "client_message" field.</summary>
    public const int ClientMessageFieldNumber = 1;
    private pb::ByteString clientMessage_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ClientMessage {
      get { return clientMessage_; }
      set {
        clientMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GtA_Gt_Broadcast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GtA_Gt_Broadcast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientMessage != other.ClientMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientMessage.Length != 0) hash ^= ClientMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ClientMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GtA_Gt_Broadcast other) {
      if (other == null) {
        return;
      }
      if (other.ClientMessage.Length != 0) {
        ClientMessage = other.ClientMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientMessage = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// gate acceptor --> gate 设置服务器id
  /// </summary>
  public sealed partial class GtA_Gt_SetServerId : pb::IMessage<GtA_Gt_SetServerId> {
    private static readonly pb::MessageParser<GtA_Gt_SetServerId> _parser = new pb::MessageParser<GtA_Gt_SetServerId>(() => new GtA_Gt_SetServerId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GtA_Gt_SetServerId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::XsfPb.GateReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_SetServerId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_SetServerId(GtA_Gt_SetServerId other) : this() {
      clientId_ = other.clientId_;
      ep_ = other.ep_;
      serverId_ = other.serverId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GtA_Gt_SetServerId Clone() {
      return new GtA_Gt_SetServerId(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private uint clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "ep" field.</summary>
    public const int EpFieldNumber = 2;
    private uint ep_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ep {
      get { return ep_; }
      set {
        ep_ = value;
      }
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 3;
    private uint serverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GtA_Gt_SetServerId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GtA_Gt_SetServerId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (Ep != other.Ep) return false;
      if (ServerId != other.ServerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (Ep != 0) hash ^= Ep.GetHashCode();
      if (ServerId != 0) hash ^= ServerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ClientId);
      }
      if (Ep != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Ep);
      }
      if (ServerId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ServerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientId);
      }
      if (Ep != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ep);
      }
      if (ServerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GtA_Gt_SetServerId other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      if (other.Ep != 0) {
        Ep = other.Ep;
      }
      if (other.ServerId != 0) {
        ServerId = other.ServerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadUInt32();
            break;
          }
          case 16: {
            Ep = input.ReadUInt32();
            break;
          }
          case 24: {
            ServerId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
